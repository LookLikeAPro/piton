~version "Approximately equivalent to version" See npm semver - Tilde Ranges & semver (7)
^version "Compatible with version" See npm semver - Caret Ranges & semver (7)
version Must match version exactly
>version Must be greater than version
>=version etc
<version
<=version
1.2.x 1.2.0, 1.2.1, etc., but not 1.3.0
http://sometarballurl (this may be the URL of a tarball which will be downloaded and installed locally
* Matches any version

python >>> import semver >>> semver.compare("1.0.0", "2.0.0") -1 >>> semver.compare("2.0.0", "1.0.0") 1 >>> semver.compare("2.0.0", "2.0.0") 0 >>> semver.match("2.0.0", ">=1.0.0") True >>> semver.match("1.0.0", ">1.0.0") False >>> semver.format_version(3, 4, 5, 'pre.2', 'build.4') '3.4.5-pre.2+build.4' >>> semver.bump_major("3.4.5") '4.0.0' >>> semver.bump_minor("3.4.5") '3.5.0' >>> semver.bump_patch("3.4.5") '3.4.6' >>> semver.max_ver("1.0.0", "2.0.0") '2.0.0' >>> semver.min_ver("1.0.0", "2.0.0") '1.0.0' 